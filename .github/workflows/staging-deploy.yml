name: CI/CD staging

on:
  push:
    branches:
      - staging

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      AFFECTED_SERVICES: ${{ needs.build-and-publish.outputs.affected_services }}

    outputs:
      affected_services: ${{ steps.get_affected_services.outputs.services }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Ensure scripts are executable
        run: chmod +x .github/workflows/scripts/jobs/*.sh

      - name: Lowercase the repo name and project name
        run: .github/workflows/scripts/jobs/format-name.sh

      - name: Set Git SHA in env
        run: echo "GITHUB_SHA=${{ github.sha }}" >> $GITHUB_ENV

      - name: Get Nx affected services
        id: get_affected_services
        run: .github/workflows/scripts/jobs/get-affected-services.sh

      - name: Set up Docker Builx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish images
        env:
          AFFECTED_SERVICES: ${{ steps.get_affected_services.outputs.services }}
        run: .github/workflows/scripts/jobs/build-and-publish.sh

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    env:
      AFFECTED_SERVICES: ${{ needs.build-and-publish.outputs.affected_services }}
      STACK_NAME: "staging"
      SERVER_PORT: "3003"
      CLIENT_PORT: "4223"
      DOMAIN_NAME: "studi-exam-jo-staging.lois-kouninef.eu"
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure scripts are executable
        run: chmod -R +x .github/workflows/scripts/jobs/*.sh

      - name: Lowercase the repo name and project name
        run: .github/workflows/scripts/jobs/format-name.sh

      - name: Set Git SHA in env
        run: echo "GITHUB_SHA=${{ github.sha }}" >> $GITHUB_ENV

      - name: Generate new stack file
        run: .github/workflows/scripts/jobs/create-stack.sh

      - name: Update stack file with latest tags
        run: .github/workflows/scripts/jobs/add-tag.sh

      - name: Copy updated stack file to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          source: "new-${{ env.STACK_NAME }}.yml"
          target: "${{ env.PROJECT_LOWER }}"

      - name: Copy deployment and backup scripts to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          source: ".github/workflows/scripts/deployment/*.sh,.github/workflows/scripts/db-backup/*.sh"
          target: "${{ env.PROJECT_LOWER }}/scripts"
          strip_components: 3

      - name: Deploy to staging
        uses: appleboy/ssh-action@master
        env:
          DOCKER_AUTH: ${{ secrets.DOCKER_AUTH }}
          REPO_LOWER: ${{ env.REPO_LOWER }}
          PROJECT_LOWER: ${{ env.PROJECT_LOWER }}
          STACK_NAME: ${{ env.STACK_NAME }}
          ENCRYPTION_PASSWORD: ${{ env.ENCRYPTION_PASSWORD }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          envs: DOCKER_AUTH,REPO_LOWER,PROJECT_LOWER,STACK_NAME,ENCRYPTION_PASSWORD
          script: |
            cd $PROJECT_LOWER

            chmod -R +x scripts/deployment/*.sh scripts/db-backup/*.sh

            ./scripts/deployment/deploy.sh
